freq = F)
lines(density(pred_list_l_bl[[i]]),
col = "red")
}
dev.off()
statistic <- c(unlist(wiod_final_data[[3]]))
levels_id_vector <- c(wiod_final_data[[5]])
country_id <- wiod_final_data[[6]][1:43]
names(g_fl_lognormal)
#extract parameter values
extract_g_fl <- as.data.frame(g_fl_lognormal)
param_vals_g_fl_1 <- colMeans(extract_g_fl)[1:43]
param_vals_g_fl_2 <- colMeans(extract_g_fl)[46:88]
pred_list_g_fl <- list()
for(i in 1:43){
pred_list_g_fl[[i]] <- rlnorm(10^3,
meanlog = param_vals_g_fl_1[i],
sdlog = param_vals_g_fl_2[i])
}
######making checking plot
pdf("/Users/Advait/Desktop/New_School/JH_networks/extra_storage_wiod_bayes/g_fl_pred.pdf", height = 15, width = 11)
par(mfrow = c(9,5),
mar = c(2,2,2,2))
for(i in 1:43){
hist(statistic[levels_id_vector == i][statistic[levels_id_vector == i] < 10],
col = "gray",
breaks = 20,
main = paste0(country_id[i],"-G_FL"),
xlab = paste0("Gosh FL ", country_id[i]),
ylab = NA,
ylim = c(0,0.8),
xlim = c(0,10),
freq = F)
lines(density(pred_list_g_fl[[i]]),
col = "red")
}
dev.off()
statistic <- c(unlist(wiod_final_data[[4]]))
levels_id_vector <- c(wiod_final_data[[5]])
country_id <- wiod_final_data[[6]][1:43]
names(g_bl_lognormal)
#extract parameter values
extract_g_bl <- as.data.frame(g_bl_lognormal)
param_vals_g_bl_1 <- colMeans(extract_g_bl)[1:43]
param_vals_g_bl_2 <- colMeans(extract_g_bl)[46:88]
pred_list_g_bl <- list()
for(i in 1:43){
pred_list_g_bl[[i]] <- rlnorm(10^3,
meanlog = param_vals_g_bl_1[i],
sdlog = param_vals_g_bl_2[i])
}
######making checking plot
pdf("/Users/Advait/Desktop/New_School/JH_networks/extra_storage_wiod_bayes/g_bl_pred.pdf", height = 15, width = 11)
par(mfrow = c(9,5),
mar = c(2,2,2,2))
for(i in 1:43){
hist(statistic[levels_id_vector == i][statistic[levels_id_vector == i] < 10],
col = "gray",
breaks = 20,
main = paste0(country_id[i],"-G_BL"),
xlab = paste0("Gosh BL ", country_id[i]),
ylab = NA,
ylim = c(0,1.2),
xlim = c(1,10),
freq = F)
lines(density(pred_list_g_bl[[i]]),
col = "red")
}
dev.off()
rm(list = ls())
load("/Users/Advait/Desktop/New_School/JH_networks/extra_storage_wiod_bayes/wiod_final_data/wiod_final_data.Rda")
statistic <- c(unlist(wiod_final_data[[3]]))
levels_id_vector <- c(wiod_final_data[[5]])
country_id <- wiod_final_data[[6]][1:43]
range(statistic)
length(statistic)
length(statistic[statistic > 10])
49/2244
(statistic[statistic > 10])
(statistic[statistic > 15])
country_id
#dropping the elements above 15
statistic <- statistic[statistic < 15]
levels_id_vector <- levels_id_vector[statistic < 15]
g_fl_normal <- fit_wiod(statistic = statistic,
levels_id_vector = levels_id_vector,
model = "normal",
pooling = "partial")
loo_g_fl_normal <- loo_wiod(g_fl_normal)
library(wiodbayes)
g_fl_normal <- fit_wiod(statistic = statistic,
levels_id_vector = levels_id_vector,
model = "normal",
pooling = "partial")
loo_g_fl_normal <- loo_wiod(g_fl_normal)
levels_id_vector
#dropping the elements above 15
statistic <- statistic[statistic < 15]
levels_id_vector <- levels_id_vector[statistic < 15]
#------------------#
# model fitting
#------------------#
# normal
#------------------#
g_fl_normal <- fit_wiod(statistic = statistic,
levels_id_vector = levels_id_vector,
model = "normal",
pooling = "partial")
length(statistic)
length(levels_id_vector)
levels_id_vector[statistic < 15]
which(statistic <= 15)
#dropping the elements above 15
indices <- which(statistic <= 15)
statistic <- statistic[indices]
levels_id_vector <- levels_id_vector[indices]
g_fl_normal <- fit_wiod(statistic = statistic,
levels_id_vector = levels_id_vector,
model = "normal",
pooling = "partial")
loo_g_fl_normal <- loo_wiod(g_fl_normal)
g_fl_lognormal <- fit_wiod(statistic = statistic,
levels_id_vector = levels_id_vector,
model = "lognormal",
pooling = "partial")
loo_g_fl_lognormal <- loo_wiod(g_fl_lognormal)
g_fl_gamma <- fit_wiod(statistic = statistic,
levels_id_vector = levels_id_vector,
model = "gamma",
pooling = "partial")
loo_g_fl_gamma <- loo_wiod(g_fl_gamma)
g_fl_exponential <- fit_wiod(statistic = statistic,
levels_id_vector = levels_id_vector,
model = "exponential",
pooling = "partial")
loo_g_fl_exponential <- loo_wiod(g_fl_exponential)
g_fl_weibull<- fit_wiod(statistic = statistic,
levels_id_vector = levels_id_vector,
model = "weibull",
pooling = "partial")
loo_g_fl_weibull <- loo_wiod(g_fl_weibull)
g_fl_compare <- loo::compare(loo_g_fl_normal,
loo_g_fl_lognormal,
loo_g_fl_gamma,
loo_g_fl_exponential,
loo_g_fl_weibull)
g_fl_compare
names(g_fl_lognormal)
#extract parameter values
extract_g_fl <- as.data.frame(g_fl_lognormal)
param_vals_g_fl_1 <- colMeans(extract_g_fl)[1:43]
param_vals_g_fl_2 <- colMeans(extract_g_fl)[46:88]
pred_list_g_fl <- list()
for(i in 1:43){
pred_list_g_fl[[i]] <- rlnorm(10^3,
meanlog = param_vals_g_fl_1[i],
sdlog = param_vals_g_fl_2[i])
}
pdf("/Users/Advait/Desktop/New_School/JH_networks/extra_storage_wiod_bayes/g_fl_pred_trunc.pdf", height = 15, width = 11)
par(mfrow = c(9,5),
mar = c(2,2,2,2))
for(i in 1:43){
hist(
# statistic[levels_id_vector == i][statistic[levels_id_vector == i] < 10],
statistic,
col = "gray",
breaks = 20,
main = paste0(country_id[i],"-G_FL"),
xlab = paste0("Gosh FL ", country_id[i]),
ylab = NA,
ylim = c(0,0.8),
xlim = c(0,10),
freq = F)
lines(density(pred_list_g_fl[[i]]),
col = "red")
}
dev.off()
statistic <- c(unlist(wiod_final_data[[4]]))
levels_id_vector <- c(wiod_final_data[[5]])
country_id <- wiod_final_data[[6]][1:43]
indices <- which(statistic < 15)
statistic <- statistic[indices]
levels_id_vector <- levels_id_vector[indices]
length(statistic)
g_bl_normal <- fit_wiod(statistic = statistic,
levels_id_vector = levels_id_vector,
model = "normal",
pooling = "partial")
loo_g_bl_normal <- loo_wiod(g_bl_normal)
g_bl_lognormal <- fit_wiod(statistic = statistic,
levels_id_vector = levels_id_vector,
model = "lognormal",
pooling = "partial")
loo_g_bl_lognormal <- loo_wiod(g_bl_lognormal)
g_bl_gamma <- fit_wiod(statistic = statistic,
levels_id_vector = levels_id_vector,
model = "gamma",
pooling = "partial")
loo_g_bl_gamma <- loo_wiod(g_bl_gamma)
g_bl_exponential <- fit_wiod(statistic = statistic,
levels_id_vector = levels_id_vector,
model = "exponential",
pooling = "partial")
loo_g_bl_exponential <- loo_wiod(g_bl_exponential)
g_bl_weibull<- fit_wiod(statistic = statistic,
levels_id_vector = levels_id_vector,
model = "weibull",
pooling = "partial")
loo_g_bl_weibull <- loo_wiod(g_bl_weibull)
#------------------#
g_bl_compare <- loo::compare(loo_g_bl_normal,
loo_g_bl_lognormal,
loo_g_bl_gamma,
loo_g_bl_exponential,
loo_g_bl_weibull)
g_bl_compare
names(g_bl_lognormal)
#extract parameter values
extract_g_bl <- as.data.frame(g_bl_lognormal)
param_vals_g_bl_1 <- colMeans(extract_g_bl)[1:43]
param_vals_g_bl_2 <- colMeans(extract_g_bl)[46:88]
pred_list_g_bl <- list()
for(i in 1:43){
pred_list_g_bl[[i]] <- rlnorm(10^3,
meanlog = param_vals_g_bl_1[i],
sdlog = param_vals_g_bl_2[i])
}
######making checking plot
pdf("/Users/Advait/Desktop/New_School/JH_networks/extra_storage_wiod_bayes/g_bl_pred_trunc.pdf", height = 15, width = 11)
par(mfrow = c(9,5),
mar = c(2,2,2,2))
for(i in 1:43){
hist(statistic[levels_id_vector == i][statistic[levels_id_vector == i] < 10],
col = "gray",
breaks = 20,
main = paste0(country_id[i],"-G_BL"),
xlab = paste0("Gosh BL ", country_id[i]),
ylab = NA,
ylim = c(0,1.2),
xlim = c(1,10),
freq = F)
lines(density(pred_list_g_bl[[i]]),
col = "red")
}
dev.off()
######making checking plot
pdf("/Users/Advait/Desktop/New_School/JH_networks/extra_storage_wiod_bayes/g_fl_pred_trunc.pdf", height = 15, width = 11)
par(mfrow = c(9,5),
mar = c(2,2,2,2))
for(i in 1:43){
hist(
# statistic[levels_id_vector == i][statistic[levels_id_vector == i] < 10],
statistic[levels_id_vector == i],
col = "gray",
breaks = 20,
main = paste0(country_id[i],"-G_FL"),
xlab = paste0("Gosh FL ", country_id[i]),
ylab = NA,
ylim = c(0,0.8),
xlim = c(0,10),
freq = F)
lines(density(pred_list_g_fl[[i]]),
col = "red")
}
dev.off()
pdf("/Users/Advait/Desktop/New_School/JH_networks/extra_storage_wiod_bayes/g_bl_pred_trunc.pdf", height = 15, width = 11)
par(mfrow = c(9,5),
mar = c(2,2,2,2))
for(i in 1:43){
hist(
# statistic[levels_id_vector == i][statistic[levels_id_vector == i] < 10],
statistic[levels_id_vector == i],
col = "gray",
breaks = 20,
main = paste0(country_id[i],"-G_BL"),
xlab = paste0("Gosh BL ", country_id[i]),
ylab = NA,
ylim = c(0,1.2),
xlim = c(1,10),
freq = F)
lines(density(pred_list_g_bl[[i]]),
col = "red")
}
dev.off()
statistic <- c(unlist(wiod_final_data[[3]]))
levels_id_vector <- c(wiod_final_data[[5]])
country_id <- wiod_final_data[[6]][1:43]
#dropping the elements above 15
indices <- which(statistic <= 15)
statistic <- statistic[indices]
levels_id_vector <- levels_id_vector[indices]
names(g_fl_lognormal)
#extract parameter values
extract_g_fl <- as.data.frame(g_fl_lognormal)
param_vals_g_fl_1 <- colMeans(extract_g_fl)[1:43]
param_vals_g_fl_2 <- colMeans(extract_g_fl)[46:88]
pred_list_g_fl <- list()
for(i in 1:43){
pred_list_g_fl[[i]] <- rlnorm(10^3,
meanlog = param_vals_g_fl_1[i],
sdlog = param_vals_g_fl_2[i])
}
pdf("/Users/Advait/Desktop/New_School/JH_networks/extra_storage_wiod_bayes/g_fl_pred_trunc.pdf", height = 15, width = 11)
par(mfrow = c(9,5),
mar = c(2,2,2,2))
for(i in 1:43){
hist(
# statistic[levels_id_vector == i][statistic[levels_id_vector == i] < 10],
statistic[levels_id_vector == i],
col = "gray",
breaks = 20,
main = paste0(country_id[i],"-G_FL"),
xlab = paste0("Gosh FL ", country_id[i]),
ylab = NA,
ylim = c(0,0.8),
xlim = c(0,10),
freq = F)
lines(density(pred_list_g_fl[[i]]),
col = "red")
}
dev.off()
length(statistic)
length(levels_id_vector)
pdf("/Users/Advait/Desktop/New_School/JH_networks/extra_storage_wiod_bayes/g_fl_pred_trunc.pdf", height = 15, width = 11)
par(mfrow = c(9,5),
mar = c(2,2,2,2))
for(i in 1:43){
hist(
# statistic[levels_id_vector == i][statistic[levels_id_vector == i] < 10],
statistic[levels_id_vector == i],
col = "gray",
breaks = 20,
main = paste0(country_id[i],"-G_FL"),
xlab = paste0("Gosh FL ", country_id[i]),
ylab = NA,
ylim = c(0,0.8),
xlim = c(0,10),
freq = F)
lines(density(pred_list_g_fl[[i]]),
col = "red")
}
dev.off()
extract parameter values
extract_g_fl <- as.data.frame(g_fl_lognormal)
param_vals_g_fl_1 <- colMeans(extract_g_fl)[1:43]
param_vals_g_fl_2 <- colMeans(extract_g_fl)[46:88]
pred_list_g_fl <- list()
for(i in 1:43){
pred_list_g_fl[[i]] <- rlnorm(10^3,
meanlog = param_vals_g_fl_1[i],
sdlog = param_vals_g_fl_2[i])
}
######making checking plot
pdf("/Users/Advait/Desktop/New_School/JH_networks/extra_storage_wiod_bayes/g_fl_pred_trunc.pdf", height = 15, width = 11)
par(mfrow = c(9,5),
mar = c(2,2,2,2))
for(i in 1:43){
hist(
# statistic[levels_id_vector == i][statistic[levels_id_vector == i] < 10],
statistic[levels_id_vector == i],
col = "gray",
breaks = 20,
main = paste0(country_id[i],"-G_FL"),
xlab = paste0("Gosh FL ", country_id[i]),
ylab = NA,
ylim = c(0,0.8),
xlim = c(0,10),
freq = F)
lines(density(pred_list_g_fl[[i]]),
col = "red")
}
dev.off()
x <- runif(100,0,1)
y <- 3 + 4*x
lm(y ~ x)
x <- runif(10,0,1)
y <- 3 + 4*x
lm(y ~ x)
?lm
lm
x
y
plot(x,y)
a <- rnorm(10,1,2)
b <- rnorm(10,2,3)
c <- rnorm(10,3,4)
dep <- c(a,b,c)
dep
stat <- c(a,b,c)
stat <- c(a,b,c)
stat
indic <- rep(c(1,2,3), each = 10)
indic
qnorm(1)
qnorm(0.5)
qnorm(0.7)
qnorm(0.9999)
pnorm(3)
pnorm(-1)
pnorm(0)
punif(0)
punif(0.5)
punif(1)
punif(0.7)
library(rstan)
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
temp_fit <- stan("temp.stan",
data = list("stat",
"indic"),
iter = 1000,
chains = 3)
temp_fit <- stan("/Users/Advait/Desktop/temp.stan",
data = list("stat",
"indic"),
iter = 1000,
chains = 3)
N <- 30
n_groups <- 3
temp_fit <- stan("/Users/Advait/Desktop/temp.stan",
data = list("stat",
"indic"),
iter = 1000,
chains = 3)
stat
indic
N <- 30
n_groups <- 3
temp_fit <- stan("/Users/Advait/Desktop/temp.stan",
data = list("stat",
"indic"),
iter = 1000,
chains = 3)
temp_fit <- stan("/Users/Advait/Desktop/temp.stan",
data = list("stat",
"indic"),
iter = 1000,
chains = 3)
temp_fit <- stan("/Users/Advait/Desktop/temp.stan",
data = list("stat",
"indic"),
iter = 1000,
chains = 3)
temp_fit
temp_fit <- stan("/Users/Advait/Desktop/temp.stan",
data = list("stat",
"indic"),
iter = 1000,
chains = 3)
temp_fit
temp_fit <- stan("/Users/Advait/Desktop/temp.stan",
data = list("stat",
"indic"),
iter = 1000,
chains = 3)
temp_fit
results <- as.data.frame(temp_fit)
results <- as.data.frame(temp_fit)
results
a <- rnorm(100,1,2)
b <- rnorm(100,2,3)
c <- rnorm(100,3,4)
stat <- c(a,b,c)
indic <- rep(c(1,2,3), each = 100)
N <- 300
n_groups <- 3
temp_fit <- stan("/Users/Advait/Desktop/temp.stan",
data = list("stat",
"indic"),
iter = 1000,
chains = 3)
stat
temp_fit
temp_fit <- stan("/Users/Advait/Desktop/temp.stan",
data = list("stat",
"indic"),
iter = 1000,
chains = 3)
results <- as.data.frame(temp_fit)
names(temp_fit)
pred <- colMeans(results)[11:310]
plot(pred,stat,
cex = 0.7,
pch = 16)
range(stat)
plot(pred,stat,
cex = 0.7,
pch = 16,
xlim = c(-6,10),
ylim = c(-6,10))
plot(pred,stat,
cex = 0.7,
pch = 16,
xlim = c(-6,10),
ylim = c(-6,10),
main = "post pred check")
abline(0,1)
temp_fit <- stan("/Users/Advait/Desktop/temp.stan",
data = list("stat",
"indic"),
iter = 1000,
chains = 3)
results <- as.data.frame(temp_fit)
names(temp_fit)
pred <- colMeans(results)[11:310]
plot(pred,stat,
cex = 0.7,
pch = 16,
xlim = c(-6,10),
ylim = c(-6,10),
main = "post pred check")
abline(0,1)
